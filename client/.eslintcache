[{"/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/index.js":"1","/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/App.js":"2","/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/reportWebVitals.js":"3","/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/components/Navbar.js":"4","/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/pages/homepage.js":"5","/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/components/PortalNav.js":"6","/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/utils/auth.js":"7","/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/pages/login.js":"8","/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/utils/mutations.js":"9","/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/pages/signup.js":"10","/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/pages/portal.js":"11","/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/pages/students.js":"12","/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/pages/schedule.js":"13","/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/pages/comments.js":"14","/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/pages/calendar.js":"15","/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/utils/queries.js":"16","/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/components/StudentTable.js":"17","/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/components/updateUser.js":"18","/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/components/UpdateUserBtn.js":"19"},{"size":667,"mtime":1629451237626,"results":"20","hashOfConfig":"21"},{"size":2034,"mtime":1629692418210,"results":"22","hashOfConfig":"21"},{"size":362,"mtime":1629442249052,"results":"23","hashOfConfig":"21"},{"size":1475,"mtime":1629479372159,"results":"24","hashOfConfig":"21"},{"size":720,"mtime":1629605644828,"results":"25","hashOfConfig":"21"},{"size":868,"mtime":1629605715487,"results":"26","hashOfConfig":"21"},{"size":1042,"mtime":1629442730446,"results":"27","hashOfConfig":"21"},{"size":2574,"mtime":1629444511250,"results":"28","hashOfConfig":"21"},{"size":708,"mtime":1630450336282,"results":"29","hashOfConfig":"21"},{"size":3114,"mtime":1629603533514,"results":"30","hashOfConfig":"21"},{"size":793,"mtime":1629603434480,"results":"31","hashOfConfig":"21"},{"size":3825,"mtime":1630310507800,"results":"32","hashOfConfig":"21"},{"size":4472,"mtime":1629699616369,"results":"33","hashOfConfig":"21"},{"size":4460,"mtime":1629704172386,"results":"34","hashOfConfig":"21"},{"size":676,"mtime":1629698273491,"results":"35","hashOfConfig":"21"},{"size":250,"mtime":1629957156671,"results":"36","hashOfConfig":"21"},{"size":1049,"mtime":1630311480955,"results":"37","hashOfConfig":"21"},{"size":1936,"mtime":1630452182236,"results":"38","hashOfConfig":"21"},{"size":820,"mtime":1630367151931,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"10tubh7",{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"42"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"82"},"/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/index.js",[],["83","84"],"/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/App.js",[],"/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/reportWebVitals.js",[],"/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/components/Navbar.js",[],"/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/pages/homepage.js",[],"/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/components/PortalNav.js",[],"/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/utils/auth.js",[],"/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/pages/login.js",[],"/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/utils/mutations.js",[],"/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/pages/signup.js",[],"/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/pages/portal.js",[],"/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/pages/students.js",[],"/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/pages/schedule.js",["85","86"],"import React, { useState } from \"react\";\nimport { Card, Container, Form, Button } from \"react-bootstrap\";\nimport PortalNav from \"../components/PortalNav\";\nimport { DateUtils } from 'react-day-picker';\nimport DayPickerInput from \"react-day-picker/DayPickerInput\";\nimport \"react-day-picker/lib/style.css\";\nimport dateFnsFormat from 'date-fns/format';\nimport dateFnsParse from 'date-fns/parse';\n\nfunction parseDate(str, format, locale) {\n  const parsed = dateFnsParse(str, format, new Date(), { locale });\n  if (DateUtils.isDate(parsed)) {\n    return parsed;\n  }\n  return undefined;\n}\n\nfunction formatDate(date, format, locale) {\n  return dateFnsFormat(date, format, { locale });\n}\n\nexport default function Schedule() {\n    const FORMAT = 'MM/dd/yyyy';\n    const [date, setDate] = useState(new Date());\n    const students = [\n        {\n            label: 'Timmy Hanson',\n            value: 'Timmy Hanson',\n        },\n        {\n            label: 'Rachel Johnson',\n            value: 'Rachel Johnson',\n        },\n        {\n            label: 'Jim Jackson',\n            value: 'Jim Jackson',\n        },\n    ];\n    const times = [\n        {\n            label: '10:00am',\n            value: '10',\n        },\n        {\n            label: '11:00am',\n            value: '11',\n        },\n        {\n            label: '12:00am',\n            value: '12',\n        },\n        {\n            label: '1:00pm',\n            value: '13',\n        },\n        {\n            label: '2:00pm',\n            value: '14',\n        },\n        {\n            label: '3:00pm',\n            value: '15',\n        },\n        {\n            label: '4:00pm',\n            value: '16',\n        },\n        {\n            label: '5:00pm',\n            value: '17',\n        },\n        {\n            label: '6:00pm',\n            value: '18',\n        },\n    ];\n\n    function onChange(date) {\n        setDate(date);\n    }\n\n    return (\n        <Container>\n            <PortalNav />\n            <h3 className='mb-3 text-center'>Welcome to Schedule Management!</h3>\n            <Card>\n                <Card.Header>\n                    <h3>Schedule a Lesson</h3>\n                </Card.Header>\n                <Card.Body>\n                    <Form>\n                        <Form.Group className='mb-3'>\n                            <Form.Label for=\"student-scheduleLesson\" className='mb-2'>Select A Student: </Form.Label><br />\n                            <Form.Control\n                                as=\"select\"\n                                name='selectStudent'\n                            //  value={formState.studentName}\n                            >\n                                {students.map((option) => (\n                                    <option value={option.value} key={option.value}>{option.label}</option>\n                                ))}\n                            </Form.Control>\n                        </Form.Group>\n                        <Form.Group className='mb-3'>\n                            <Form.Label for=\"date-scheduleLesson\">Select Date: </Form.Label><br />\n                            <DayPickerInput\n                            formatDate={formatDate}\n                            format={FORMAT}\n                            parseDate={parseDate}\n                            placeholder={`${dateFnsFormat(new Date(), FORMAT)}`} />\n                        </Form.Group>\n                        <Form.Group className='mb-3'>\n                            <Form.Label for=\"time-scheduleLesson\" className='mb-2'>Select A Time: </Form.Label>\n                            <Form.Control\n                                as=\"select\"\n                                name='selectTime'\n                            //  value={formState.studentName}\n                            >\n                                {times.map((option) => (\n                                    <option value={option.value} key={option.value}>{option.label}</option>\n                                ))}\n                            </Form.Control>\n                        </Form.Group>\n                        <Button\n                            as='input'\n                            className='my-2'\n                            type='submit'\n                        // value='addLesson' \n                        />\n                    </Form>\n                </Card.Body>\n            </Card>\n        </Container>\n    )\n}\n\n/*\n    {{#each students as |user|}}\n    <option>'ID, Firstname Last Name'</option>\n    /* {{/each}} */\n","/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/pages/comments.js",[],"/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/pages/calendar.js",[],"/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/utils/queries.js",[],"/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/components/StudentTable.js",[],"/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/components/updateUser.js",["87","88","89","90","91","92"],"import React, { useState } from 'react';\nimport { Form, Row, Col, Button } from 'react-bootstrap';\nimport { useMutation } from '@apollo/client';\nimport { UPDATE_USER } from '../utils/mutations';\n\nexport default function UpdateUser({ students }) {\n    const [displayError, setDisplayError] = useState(null);\n    const [formState, setFormState] = useState({\n        _id: students._id,\n        username: students.username,\n        email: students.email\n    });\n\n    const [updateUser, { error }] = useMutation(UPDATE_USER);\n\n    console.log({ ...formState });\n\n\n    const handleUpdate = async (e) => {\n        e.preventDefault();\n        setDisplayError(null);\n\n        // destructure state\n        const {\n            _id,\n            username,\n            email,\n        } = formState;\n        try {\n            await updateUser({\n                variables: {\n                    _id: _id,\n                    username: username,\n                    email: email\n                }\n            });\n        }\n        catch (err) {\n            return setDisplayError(`${err}`);\n        }\n    };\n\n    const handleChange = (event) => {\n        const { name, value } = event.target;\n\n        setFormState({\n            ...formState,\n            [name]: value,\n        });\n    };\n\n    return (\n        <div>\n            <form className=\"form\">\n                <input\n                    value={formState.username}\n                    name=\"username\"\n                    onChange={handleChange}\n                    type=\"text\"\n                    placeholder=\"username\"\n                />\n                <input\n                    value={formState.email}\n                    name=\"email\"\n                    onChange={handleChange}\n                    type=\"email\"\n                    placeholder=\"email\"\n                />\n                <button type=\"button\" onClick={handleUpdate}>Submit</button>\n            </form>\n        </div>\n    )\n}\n","/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/components/UpdateUserBtn.js",["93"],"import React from 'react';\nimport { useMutation } from '@apollo/client';\nimport { UPDATE_USER } from '../utils/mutations';\n\nexport default function UpdateUserBtn({ formState }) {\n    console.log(formState);\n    const update = useMutation(UPDATE_USER);\n    const {\n        username,\n        email\n    } = formState;\n\n    const buildInput = {\n        username: username,\n        email: email\n      };\n    const handleUpdate = async (e) => {\n        try {\n            await update({\n                variables: {\n                    ...buildInput\n                }\n            });\n            console.log('yeppers!')\n        }\n        catch (err) {\n            return console.err;\n        }\n\n    }\n   return (\n    <button\n    className='btn-info'\n    onClick={console.log('click')} \n    >\n    Update    \n    </button>\n   )\n}",["94","95"],{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","severity":1,"message":"101","line":24,"column":12,"nodeType":"102","messageId":"103","endLine":24,"endColumn":16},{"ruleId":"100","severity":1,"message":"104","line":78,"column":14,"nodeType":"102","messageId":"103","endLine":78,"endColumn":22},{"ruleId":"100","severity":1,"message":"105","line":2,"column":10,"nodeType":"102","messageId":"103","endLine":2,"endColumn":14},{"ruleId":"100","severity":1,"message":"106","line":2,"column":16,"nodeType":"102","messageId":"103","endLine":2,"endColumn":19},{"ruleId":"100","severity":1,"message":"107","line":2,"column":21,"nodeType":"102","messageId":"103","endLine":2,"endColumn":24},{"ruleId":"100","severity":1,"message":"108","line":2,"column":26,"nodeType":"102","messageId":"103","endLine":2,"endColumn":32},{"ruleId":"100","severity":1,"message":"109","line":7,"column":12,"nodeType":"102","messageId":"103","endLine":7,"endColumn":24},{"ruleId":"100","severity":1,"message":"110","line":14,"column":26,"nodeType":"102","messageId":"103","endLine":14,"endColumn":31},{"ruleId":"100","severity":1,"message":"111","line":17,"column":11,"nodeType":"102","messageId":"103","endLine":17,"endColumn":23},{"ruleId":"96","replacedBy":"112"},{"ruleId":"98","replacedBy":"113"},"no-native-reassign",["114"],"no-negated-in-lhs",["115"],"no-unused-vars","'date' is assigned a value but never used.","Identifier","unusedVar","'onChange' is defined but never used.","'Form' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'Button' is defined but never used.","'displayError' is assigned a value but never used.","'error' is assigned a value but never used.","'handleUpdate' is assigned a value but never used.",["114"],["115"],"no-global-assign","no-unsafe-negation"]