[{"/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/index.js":"1","/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/App.js":"2","/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/reportWebVitals.js":"3","/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/components/Navbar.js":"4","/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/pages/homepage.js":"5","/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/components/PortalNav.js":"6","/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/utils/auth.js":"7","/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/pages/login.js":"8","/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/utils/mutations.js":"9","/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/pages/signup.js":"10","/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/pages/portal.js":"11","/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/pages/students.js":"12","/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/pages/schedule.js":"13","/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/pages/comments.js":"14","/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/pages/calendar.js":"15","/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/utils/queries.js":"16","/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/components/StudentTable.js":"17"},{"size":667,"mtime":1629451237626,"results":"18","hashOfConfig":"19"},{"size":2034,"mtime":1629692418210,"results":"20","hashOfConfig":"19"},{"size":362,"mtime":1629442249052,"results":"21","hashOfConfig":"19"},{"size":1475,"mtime":1629479372159,"results":"22","hashOfConfig":"19"},{"size":720,"mtime":1629605644828,"results":"23","hashOfConfig":"19"},{"size":868,"mtime":1629605715487,"results":"24","hashOfConfig":"19"},{"size":1042,"mtime":1629442730446,"results":"25","hashOfConfig":"19"},{"size":2574,"mtime":1629444511250,"results":"26","hashOfConfig":"19"},{"size":750,"mtime":1630129474930,"results":"27","hashOfConfig":"19"},{"size":3114,"mtime":1629603533514,"results":"28","hashOfConfig":"19"},{"size":793,"mtime":1629603434480,"results":"29","hashOfConfig":"19"},{"size":3844,"mtime":1629960069061,"results":"30","hashOfConfig":"19"},{"size":4472,"mtime":1629699616369,"results":"31","hashOfConfig":"19"},{"size":4460,"mtime":1629704172386,"results":"32","hashOfConfig":"19"},{"size":676,"mtime":1629698273491,"results":"33","hashOfConfig":"19"},{"size":250,"mtime":1629957156671,"results":"34","hashOfConfig":"19"},{"size":2508,"mtime":1629959833227,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"10tubh7",{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"38"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"38"},"/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/index.js",[],["74","75"],"/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/App.js",[],"/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/reportWebVitals.js",[],"/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/components/Navbar.js",[],"/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/pages/homepage.js",[],"/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/components/PortalNav.js",[],"/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/utils/auth.js",[],"/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/pages/login.js",[],"/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/utils/mutations.js",[],"/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/pages/signup.js",[],"/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/pages/portal.js",[],"/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/pages/students.js",["76","77"],"import React, { useState } from 'react';\nimport { Card, Container, Table, Form, Button } from 'react-bootstrap';\nimport PortalNav from '../components/PortalNav';\nimport StudentTable from '../components/StudentTable';\nimport { useMutation } from '@apollo/client';\nimport { ADD_USER } from '../utils/mutations';\nimport Auth from '../utils/auth';\n\nexport default function Students() {\n    // form input to add student\n    const [formState, setFormState] = useState({\n        username: '',\n        email: '',\n        password: 'password1234',\n    });\n    const [addUser, { data }] = useMutation(ADD_USER);\n\n    // update state based on form input changes\n    const handleChange = (event) => {\n        const { name, value } = event.target;\n\n        setFormState({\n            ...formState,\n            [name]: value,\n        });\n    };\n\n    // submit form\n    const handleFormSubmit = async (event) => {\n        event.preventDefault();\n        console.log(formState);\n\n        try {\n            const { data } = await addUser({\n                variables: { ...formState },\n            });\n\n            Auth.login(data.addUser.token);\n        } catch (e) {\n            console.error(e);\n        }\n        setFormState({\n            username: '',\n            email: '',\n            password: 'password1234',\n        });\n\n    };\n    return (\n        <Container className='p-4 my-4'>\n            <PortalNav />\n            <StudentTable />\n            <Card>\n                <Card.Header>\n                    <h4>Add New Student</h4>\n                </Card.Header>\n                <Card.Body className=\"p-3\">\n                    <p>Please note that when creating a student, their password is randomly generated. The password, which you\n                        will need to write down and share with your student, will appear in a pop up window.</p>\n                    <p>The student will need the email address and the generated password to log in.</p>\n                    <Form onSubmit={handleFormSubmit} className=\"mb-3 px-3\">\n                        <Form.Group className=\"mb-3 px-3\" controlId=\"username\">\n                            <Form.Label>Student Username</Form.Label>\n                            <Form.Control\n                                type=\"text\"\n                                name=\"username\"\n                                value={formState.username}\n                                onChange={handleChange}\n                            />\n                        </Form.Group>\n                        <Form.Group className=\"mb-3 px-3\" controlId=\"email\">\n                            <Form.Label>Student Email</Form.Label>\n                            <Form.Control\n                                type=\"email\"\n                                name=\"email\"\n                                value={formState.email}\n                                onChange={handleChange}\n\n                            />\n                        </Form.Group>\n                        <Form.Group className=\"mb-3 px-3\" controlId=\"studentFirstName\">\n                            <Form.Label>Password</Form.Label>\n                            <Form.Control\n                                type=\"text\"\n                                name=\"password\"\n                                value={formState.password}\n                                onChange={handleChange}\n                            />\n                        </Form.Group>\n                        <Button\n                            className=\"mx-3\"\n                            variant=\"success\"\n                            type=\"submit\"\n                            style={{ cursor: 'pointer' }}\n                        >\n                            Add Student\n                        </Button>\n                    </Form>\n                </Card.Body>\n            </Card>\n        </Container>\n    )\n};","/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/pages/schedule.js",["78","79"],"import React, { useState } from \"react\";\nimport { Card, Container, Form, Button } from \"react-bootstrap\";\nimport PortalNav from \"../components/PortalNav\";\nimport { DateUtils } from 'react-day-picker';\nimport DayPickerInput from \"react-day-picker/DayPickerInput\";\nimport \"react-day-picker/lib/style.css\";\nimport dateFnsFormat from 'date-fns/format';\nimport dateFnsParse from 'date-fns/parse';\n\nfunction parseDate(str, format, locale) {\n  const parsed = dateFnsParse(str, format, new Date(), { locale });\n  if (DateUtils.isDate(parsed)) {\n    return parsed;\n  }\n  return undefined;\n}\n\nfunction formatDate(date, format, locale) {\n  return dateFnsFormat(date, format, { locale });\n}\n\nexport default function Schedule() {\n    const FORMAT = 'MM/dd/yyyy';\n    const [date, setDate] = useState(new Date());\n    const students = [\n        {\n            label: 'Timmy Hanson',\n            value: 'Timmy Hanson',\n        },\n        {\n            label: 'Rachel Johnson',\n            value: 'Rachel Johnson',\n        },\n        {\n            label: 'Jim Jackson',\n            value: 'Jim Jackson',\n        },\n    ];\n    const times = [\n        {\n            label: '10:00am',\n            value: '10',\n        },\n        {\n            label: '11:00am',\n            value: '11',\n        },\n        {\n            label: '12:00am',\n            value: '12',\n        },\n        {\n            label: '1:00pm',\n            value: '13',\n        },\n        {\n            label: '2:00pm',\n            value: '14',\n        },\n        {\n            label: '3:00pm',\n            value: '15',\n        },\n        {\n            label: '4:00pm',\n            value: '16',\n        },\n        {\n            label: '5:00pm',\n            value: '17',\n        },\n        {\n            label: '6:00pm',\n            value: '18',\n        },\n    ];\n\n    function onChange(date) {\n        setDate(date);\n    }\n\n    return (\n        <Container>\n            <PortalNav />\n            <h3 className='mb-3 text-center'>Welcome to Schedule Management!</h3>\n            <Card>\n                <Card.Header>\n                    <h3>Schedule a Lesson</h3>\n                </Card.Header>\n                <Card.Body>\n                    <Form>\n                        <Form.Group className='mb-3'>\n                            <Form.Label for=\"student-scheduleLesson\" className='mb-2'>Select A Student: </Form.Label><br />\n                            <Form.Control\n                                as=\"select\"\n                                name='selectStudent'\n                            //  value={formState.studentName}\n                            >\n                                {students.map((option) => (\n                                    <option value={option.value} key={option.value}>{option.label}</option>\n                                ))}\n                            </Form.Control>\n                        </Form.Group>\n                        <Form.Group className='mb-3'>\n                            <Form.Label for=\"date-scheduleLesson\">Select Date: </Form.Label><br />\n                            <DayPickerInput\n                            formatDate={formatDate}\n                            format={FORMAT}\n                            parseDate={parseDate}\n                            placeholder={`${dateFnsFormat(new Date(), FORMAT)}`} />\n                        </Form.Group>\n                        <Form.Group className='mb-3'>\n                            <Form.Label for=\"time-scheduleLesson\" className='mb-2'>Select A Time: </Form.Label>\n                            <Form.Control\n                                as=\"select\"\n                                name='selectTime'\n                            //  value={formState.studentName}\n                            >\n                                {times.map((option) => (\n                                    <option value={option.value} key={option.value}>{option.label}</option>\n                                ))}\n                            </Form.Control>\n                        </Form.Group>\n                        <Button\n                            as='input'\n                            className='my-2'\n                            type='submit'\n                        // value='addLesson' \n                        />\n                    </Form>\n                </Card.Body>\n            </Card>\n        </Container>\n    )\n}\n\n/*\n    {{#each students as |user|}}\n    <option>'ID, Firstname Last Name'</option>\n    /* {{/each}} */\n","/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/pages/comments.js",[],"/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/pages/calendar.js",[],"/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/utils/queries.js",[],"/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/components/StudentTable.js",["80","81"],"import React, { useState } from 'react';\nimport { useQuery } from '@apollo/client';\nimport { GET_STUDENTS } from '../utils/queries';\nimport { Card, Container, Table, Button } from 'react-bootstrap';\n\nexport default function StudentTable() {\n    // populate table with list of students\n    const { loading, data } = useQuery(GET_STUDENTS);\n    const students = data?.users || [];\n    return (\n        <Container>\n                    <h3 className='text-center'>Welcome to Student Management!</h3>\n            <Card className='p-4 my-4'>\n                <Card.Header>\n                    <h4>View Current Students</h4>\n                </Card.Header>\n                <Card.Body>\n                    <Table responsive>\n                        <thead>\n                            <tr>\n                                <th scope=\"col\"></th>\n                                <th scope=\"col\">Username</th>\n                                <th scope=\"col\">Email</th>\n                                <th scope=\"col\"></th>\n                                <th scope=\"col\"></th>\n                                <th scope=\"col\"></th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {students.map((student) => (\n                                <tr>\n                                    <th scope=\"row\" className=\"update-studentId\" value={student._id}></th>\n                                    <td><textarea className=\"update-username\" placeholder={student.username}></textarea></td>\n                                    <td><textarea className=\"update-email\" placeholder={student.email}></textarea></td>\n                                    <td><Button\n                                        variant='info'\n                                        value=\"{{user.id}}\"\n                                        type=\"button\">\n                                        Update\n                                    </Button></td>\n                                    <td><Button\n                                        variant='danger'\n                                        value=\"{{user.id}}\"\n                                        type=\"button\">\n                                        Delete\n                                    </Button></td>\n                                </tr>\n                            ))}\n                        </tbody>\n                    </Table>\n                </Card.Body>\n\n            </Card>\n\n        </Container>\n    )\n}",{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","severity":1,"message":"87","line":2,"column":27,"nodeType":"88","messageId":"89","endLine":2,"endColumn":32},{"ruleId":"86","severity":1,"message":"90","line":16,"column":23,"nodeType":"88","messageId":"89","endLine":16,"endColumn":27},{"ruleId":"86","severity":1,"message":"91","line":24,"column":12,"nodeType":"88","messageId":"89","endLine":24,"endColumn":16},{"ruleId":"86","severity":1,"message":"92","line":78,"column":14,"nodeType":"88","messageId":"89","endLine":78,"endColumn":22},{"ruleId":"86","severity":1,"message":"93","line":1,"column":17,"nodeType":"88","messageId":"89","endLine":1,"endColumn":25},{"ruleId":"86","severity":1,"message":"94","line":8,"column":13,"nodeType":"88","messageId":"89","endLine":8,"endColumn":20},"no-native-reassign",["95"],"no-negated-in-lhs",["96"],"no-unused-vars","'Table' is defined but never used.","Identifier","unusedVar","'data' is assigned a value but never used.","'date' is assigned a value but never used.","'onChange' is defined but never used.","'useState' is defined but never used.","'loading' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]