[{"/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/index.js":"1","/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/App.js":"2","/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/reportWebVitals.js":"3","/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/components/Navbar.js":"4","/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/pages/homepage.js":"5","/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/components/PortalNav.js":"6","/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/utils/auth.js":"7","/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/pages/login.js":"8","/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/utils/mutations.js":"9","/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/pages/signup.js":"10","/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/pages/portal.js":"11","/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/pages/students.js":"12","/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/pages/schedule.js":"13","/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/pages/calendar.js":"14","/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/utils/queries.js":"15","/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/components/Students/StudentTable.js":"16","/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/components/Students/StudentList.js":"17","/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/components/Students/DeleteUserBtn.js":"18","/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/components/Students/UpdateUserBtn.js":"19","/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/pages/messages.js":"20","/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/components/Messages/AddMessage.js":"21","/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/components/Messages/SelectStudent.js":"22","/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/components/Messages/MessageHistory.js":"23","/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/components/Schedule/NewLesson.js":"24","/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/components/Schedule/ViewSchedule.js":"25","/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/components/Schedule/DeleteButton.js":"26","/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/components/Schedule/EditButton.js":"27","/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/hooks/useConfirm.js":"28","/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/components/ConfirmModal.js":"29","/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/components/Schedule/SingleLesson.js":"30","/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/utils/helpers/times.js":"31","/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/utils/context/ConfirmContexProvider.js":"32","/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/utils/context/ConfirmContext.js":"33","/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/utils/context/ConfirmReducer.js":"34","/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/components/Schedule/SetNotifications.js":"35","/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/components/Students/AddStudent.js":"36","/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/components/Schedule/Calendar.js":"37","/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/store/index.js":"38","/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/store/reducers.js":"39","/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/store/reducers/eventReducer.js":"40","/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/store/reducers/userReducer.js":"41","/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/store/actions.js":"42","/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/store/reducers/messageReducer.js":"43"},{"size":885,"mtime":1637044997132,"results":"44","hashOfConfig":"45"},{"size":2631,"mtime":1637217868405,"results":"46","hashOfConfig":"45"},{"size":362,"mtime":1637038816970,"results":"47","hashOfConfig":"45"},{"size":1442,"mtime":1637039386838,"results":"48","hashOfConfig":"45"},{"size":971,"mtime":1637141514539,"results":"49","hashOfConfig":"45"},{"size":749,"mtime":1637038816966,"results":"50","hashOfConfig":"45"},{"size":1042,"mtime":1637057386991,"results":"51","hashOfConfig":"45"},{"size":2574,"mtime":1637392379668,"results":"52","hashOfConfig":"45"},{"size":1896,"mtime":1637038816970,"results":"53","hashOfConfig":"45"},{"size":3114,"mtime":1637038816969,"results":"54","hashOfConfig":"45"},{"size":797,"mtime":1637038816969,"results":"55","hashOfConfig":"45"},{"size":739,"mtime":1637138851912,"results":"56","hashOfConfig":"45"},{"size":759,"mtime":1637139450730,"results":"57","hashOfConfig":"45"},{"size":827,"mtime":1637392912514,"results":"58","hashOfConfig":"45"},{"size":850,"mtime":1637226285306,"results":"59","hashOfConfig":"45"},{"size":1542,"mtime":1637226068109,"results":"60","hashOfConfig":"45"},{"size":1649,"mtime":1637038816968,"results":"61","hashOfConfig":"45"},{"size":890,"mtime":1637038816968,"results":"62","hashOfConfig":"45"},{"size":1090,"mtime":1637038816968,"results":"63","hashOfConfig":"45"},{"size":704,"mtime":1637139014112,"results":"64","hashOfConfig":"45"},{"size":1519,"mtime":1637038816966,"results":"65","hashOfConfig":"45"},{"size":1234,"mtime":1637137781324,"results":"66","hashOfConfig":"45"},{"size":1544,"mtime":1637038816966,"results":"67","hashOfConfig":"45"},{"size":7676,"mtime":1637232419474,"results":"68","hashOfConfig":"45"},{"size":2444,"mtime":1637044966160,"results":"69","hashOfConfig":"45"},{"size":1054,"mtime":1637038816967,"results":"70","hashOfConfig":"45"},{"size":430,"mtime":1637045712088,"results":"71","hashOfConfig":"45"},{"size":910,"mtime":1637044997131,"results":"72","hashOfConfig":"45"},{"size":1043,"mtime":1637038816966,"results":"73","hashOfConfig":"45"},{"size":3542,"mtime":1637141576503,"results":"74","hashOfConfig":"45"},{"size":2356,"mtime":1637044997136,"results":"75","hashOfConfig":"45"},{"size":403,"mtime":1637044997137,"results":"76","hashOfConfig":"45"},{"size":106,"mtime":1637044997137,"results":"77","hashOfConfig":"45"},{"size":490,"mtime":1637044997136,"results":"78","hashOfConfig":"45"},{"size":1490,"mtime":1637136152463,"results":"79","hashOfConfig":"45"},{"size":3934,"mtime":1637137210657,"results":"80","hashOfConfig":"45"},{"size":507,"mtime":1637139576486,"results":"81","hashOfConfig":"45"},{"size":510,"mtime":1637214372934,"results":"82","hashOfConfig":"45"},{"size":417,"mtime":1637215179819,"results":"83","hashOfConfig":"45"},{"size":964,"mtime":1637222035381,"results":"84","hashOfConfig":"45"},{"size":937,"mtime":1637225803256,"results":"85","hashOfConfig":"45"},{"size":627,"mtime":1637219329936,"results":"86","hashOfConfig":"45"},{"size":357,"mtime":1637219277262,"results":"87","hashOfConfig":"45"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},"10tubh7",{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"90"},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"90"},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"90"},{"filePath":"140","messages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"142","messages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"144","messages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"146","messages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"148","messages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"150","messages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"90"},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"155","messages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"157","messages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"159","messages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"161","messages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"90"},{"filePath":"164","messages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"166","messages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"168","messages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"170","messages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"172","messages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"174","messages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"176","messages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"178","messages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"90"},"/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/index.js",[],["181","182"],"/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/App.js",[],"/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/reportWebVitals.js",[],"/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/components/Navbar.js",[],"/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/pages/homepage.js",[],"/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/components/PortalNav.js",[],"/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/utils/auth.js",[],"/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/pages/login.js",[],"/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/utils/mutations.js",[],"/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/pages/signup.js",[],"/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/pages/portal.js",[],"/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/pages/students.js",["183"],"import React from 'react';\nimport { Container } from \"react-bootstrap\";\nimport \"react-day-picker/lib/style.css\";\nimport AddStudent from '../components/Students/AddStudent';\nimport PortalNav from '../components/PortalNav';\nimport Auth from '../utils/auth'\n\nexport default function Students() {\n\n    const loggedStatus = Auth.loggedIn();\n    const isTeacher = Auth.getProfile().data.isTeacher;\n    return (\n        <Container>  \n            {loggedStatus && isTeacher ? (\n                <AddStudent />\n            ) : (\n                <>\n                    <h2>\n                        You must be logged in as a teacher to access this page.\n                    </h2>\n                </>\n            )}\n        </Container>\n    );\n};\n\n\n\n\n","/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/pages/schedule.js",[],"/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/pages/calendar.js",["184","185"],"/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/utils/queries.js",[],"/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/components/Students/StudentTable.js",["186"],"import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useQuery } from '@apollo/client';\nimport { Container } from 'react-bootstrap';\nimport { GET_STUDENTS } from '../../utils/queries';\nimport { FETCH_ALL_USERS } from '../../store/actions';\nimport StudentList from './StudentList';\n\nexport default function StudentTable() {\n    // redux\n    const dispatch = useDispatch();\n    const user = useSelector((state) => Object.values(state.user));\n    console.log(user);\n\n    // populate table with list of students\n    const { loading, data } = useQuery(GET_STUDENTS);\n    const students = data?.users || [];\n\n \n\n    useEffect(() => {\n        //fetchUsers();\n\n        if(user.length === 0 && data) {\n            dispatch({\n                type: FETCH_ALL_USERS,\n                payload: data.users\n            })\n        }\n    }, [loading, data, dispatch]); \n\n    return (\n        <Container>\n            <h3 className='text-center'>Welcome to Student Management!</h3>\n            <h4 className='my-4 text-center'>View Current Students</h4>\n            <div className='p-4 my-4 d-flex justify-content-center'>\n                {loading ? (\n                    <div>Loading...</div>\n                ) : (\n                    <div>\n                        {students && students.map((student) => (\n                            <StudentList students={student} key={student._id} />\n                        ))}\n                    </div>\n                )}\n            </div>\n        </Container>\n    )\n}","/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/components/Students/StudentList.js",[],"/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/components/Students/DeleteUserBtn.js",[],"/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/components/Students/UpdateUserBtn.js",[],"/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/pages/messages.js",[],"/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/components/Messages/AddMessage.js",[],"/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/components/Messages/SelectStudent.js",[],"/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/components/Messages/MessageHistory.js",[],"/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/components/Schedule/NewLesson.js",["187","188","189","190"],"import React, { useState, useEffect } from 'react';\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { useSelector } from 'react-redux';\nimport { EVENTS_BY_DATE, GET_STUDENTS } from '../../utils/queries';\nimport { ADD_EVENT_AND_EMAIL } from '../../utils/mutations';\nimport times from '../../utils/helpers/times';\nimport { Card, Container, Form, Button } from \"react-bootstrap\";\nimport { Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faEnvelopeSquare } from '@fortawesome/free-solid-svg-icons'\nimport { DateUtils } from 'react-day-picker';\nimport DayPickerInput from \"react-day-picker/DayPickerInput\";\nimport \"react-day-picker/lib/style.css\";\nimport dateFnsFormat from 'date-fns/format';\nimport dateFnsParse from 'date-fns/parse';\nimport ViewSchedule from './ViewSchedule';\nimport { format, parse } from 'date-fns'\nconst mongoose = require('mongoose');\n\nfunction parseDate(str, format) {\n    const parsed = dateFnsParse(str, format, new Date());\n    if (DateUtils.isDate(parsed)) {\n        return parsed;\n    }\n    return undefined;\n}\n\nfunction formatDate(date, format) {\n    return dateFnsFormat(date, format);\n}\n\nexport default function NewLesson() {\n    const icon = <FontAwesomeIcon icon={faEnvelopeSquare} />\n    const students = useSelector((state) => Object.values(state.user));\n\n\n    // const { data } = useQuery(GET_STUDENTS);\n    const [addEvent] = useMutation(ADD_EVENT_AND_EMAIL, {\n        refetchQueries: [\n            EVENTS_BY_DATE, // DocumentNode object parsed with gql\n            'eventsByDate' // Query name\n        ],\n    });\n    // const students = data?.users || [];\n    const [studentId, setStudentId] = useState('');\n    const [studentName, setStudentName] = useState('');\n    const [studentEmail, setStudentEmail] = useState('');\n    const [time, setTime] = useState({ value: '' });\n    const [schedule, setSchedule] = useState('');\n    const [selectedDay, setSelectedDay] = useState(undefined)\n    const [description, setDescription] = useState('');\n    const FORMAT = 'MM/dd/yyyy';\n\n    const dayChange = (day, modifiers, dayPickerInput) => {\n        format(day, 'MM.dd.yyyy');\n        setSelectedDay(day)\n        const input = dayPickerInput.getInput();\n        setSchedule(input.value);\n    }\n\n    const handleChange = async (e) => {\n        setStudentId(e.target.value)\n    };\n\n    const getNames = (e) => {\n        for (let i = 0; i < students.length; i++) {\n            if (students[i]._id === studentId) {\n                setStudentName(students[i].username);\n                setStudentEmail(students[i].email);\n            }\n        }\n    }\n\n    useEffect(() => {\n        getNames();\n    });\n\n    const handleForm = async (e) => {\n        e.preventDefault();\n        // check for for errors`\n\n        // make sure values are filled in and valid\n\n        let email = studentEmail;\n\n        let timeStamp = parse(schedule, 'MM/dd/yyyy', new Date());\n\n        let studentId = mongoose.Types.ObjectId(studentId);\n\n        const eventInput = {\n            studentId: studentId,\n            studentName: studentName,\n            date: timeStamp,\n            dayRef: schedule,\n            time: time,\n            description: description,\n        };\n\n        const sendEmailInput = {\n            email: 'nelsontjohns@gmail.com',\n            senderName: 'Nelson',\n            toEmail: email,\n            subject: `New lesson on ${schedule}`,\n            text: `This is an autmated reminder that you have a new lesson scheduled with Nelson Johns on ${schedule} at ${time}`\n        }\n\n        // if the input is valid, send it to server\n        try {\n            await addEvent({ variables: { AddEventInput: eventInput, SendEmailInput: sendEmailInput } });\n            alert('lesson added');\n        } catch (err) {\n            console.log(err);\n        }\n        setStudentId('');\n        setStudentName('');\n        setStudentEmail('');\n        setDescription('');\n    };\n\n    return (\n\n        <Container>\n            <h3 className='mb-3 text-center'>Welcome to Schedule Management!</h3>\n\n            <Card>\n                <Card.Header>\n                    <h3>Schedule a Lesson</h3>\n                </Card.Header>\n                <Card.Body>\n                    <Form onSubmit={handleForm}>\n                        <Form.Group className='mb-3'>\n                            <Form.Label className='mb-2'>Select A Student: </Form.Label><br />\n                            <Form.Control\n                                as=\"select\"\n                                name='selectStudent'\n                                value={studentId}\n                                onChange={handleChange}\n                            >\n                                <option value=''> Select a Student </option>\n                                {students && students.map((option) => (\n                                    <option value={option._id} key={option._id}>{option.username}</option>\n                                ))}\n                            </Form.Control>\n                        </Form.Group>\n                        <Form.Group className='mb-3'>\n                            <Form.Label >Select Date: </Form.Label><br />\n                            <DayPickerInput\n                                onDayChange={dayChange}\n                                hideOnDayClick={false}\n                                placeholder=\"mm/dd/yyyy\"\n                                formatDate={formatDate}\n                                format={FORMAT}\n                                parseDate={parseDate}\n                            />\n\n                            {/* {selectedDay ? (\n                                <p>You clicked {selectedDay.toLocaleDateString()}</p>\n                            ) : (\n                                <p>Please select a day.</p>\n                            )} */}\n                        </Form.Group>\n                        <Form.Group className='mb-3'>\n                            <Form.Label className='mb-2'>Select A Time: </Form.Label>\n                            <Form.Control\n                                as=\"select\"\n                                name='selectTime'\n                                value={times.value}\n                                onChange={(e) => setTime(e.target.value)}\n\n                            >\n                                <option value=''> Select a Time </option>\n                                {times.map((option) => (\n                                    <option value={option.value} key={option.value}>{option.label}</option>\n                                ))}\n                            </Form.Control>\n                        </Form.Group>\n                        <Form.Group>\n                            <Form.Control\n                                as=\"textarea\"\n                                name=\"description\"\n                                value={description}\n                                onChange={(e) => setDescription(e.target.value)}\n                                style={{ height: '100px' }}\n                            />\n                        </Form.Group>\n                        <Button\n                            as='input'\n                            className='my-2'\n                            type='submit'\n                        />\n                    </Form>\n                </Card.Body>\n            </Card>\n            <ViewSchedule day={schedule} />\n            <Link to={'/notifications'}>\n                <Button variant=\"primary\" size=\"lg\">\n                    {icon} manage notifications\n                </Button>\n            </Link>\n        </Container>\n    )\n}\n\n","/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/components/Schedule/ViewSchedule.js",[],"/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/components/Schedule/DeleteButton.js",[],"/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/components/Schedule/EditButton.js",[],"/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/hooks/useConfirm.js",[],"/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/components/ConfirmModal.js",[],"/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/components/Schedule/SingleLesson.js",["191"],"import React, { useState, useEffect } from 'react';\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { useParams } from 'react-router-dom';\nimport { GET_EVENT } from '../../utils/queries';\nimport { UPDATE_EVENT } from '../../utils/mutations';\nimport { Card, Container, Form, Button } from \"react-bootstrap\";\n\nexport default function SingleLesson() {\n    // Use `useParams()` to retrieve value of the route parameter `/lesson/:id`\n    const [updateEvent] = useMutation(UPDATE_EVENT);\n    const { id } = useParams();\n    // eslint-disable-next-line\n    const { data } = useQuery(GET_EVENT, {\n        // Pass the `_id` URL parameter into query to retrieve this event's data\n        variables: { _id: id },\n    });\n    const eventData = data?.event || {};\n\n    const initialState = {\n        studentName: eventData?.studentName ? eventData.studentName : '',\n        date: eventData?.date ? eventData.date : '',\n        dayRef: eventData?.dayRef ? eventData.dayRef : '',\n        time: eventData?.time ? eventData.time : '',\n        description: eventData?.description ? eventData.description : '',\n    };\n\n\n    const [formState, setFormState] = useState(initialState);\n\n    const handleChange = (event) => {\n        const { name, value } = event.target;\n\n        setFormState({\n            ...formState,\n            [name]: value,\n        });\n    };\n\n    const buildInput = {\n        studentId: eventData.studentId,\n        studentName: eventData.studentName,\n        date: formState.date,\n        dayRef: formState.dayRef,\n        time: formState.time,\n        description: formState.description,\n    }\n\n    const handleUpdate = async () => {\n        try {\n            await updateEvent({\n                variables: { _id: id, ...buildInput }})\n        } catch (err) {\n            console.log(err);\n        }\n\n    };\n\n    return (\n\n        <Container>\n            <Card>\n                <Card.Header>\n                    <h3>Update Lesson with {eventData.studentName} on {eventData.date}</h3>\n                </Card.Header>\n                <Card.Body>\n                    <Form onSubmit={handleUpdate}>\n                        <Form.Group>\n                            <Form.Control\n                                as=\"input\"\n                                name=\"dayRef\"\n                                value={formState.dayRef}\n                                onChange={handleChange}\n                            />\n                        </Form.Group>\n                        <Form.Group>\n                            <Form.Control\n                                as=\"input\"\n                                name=\"time\"\n                                value={formState.time}\n                                onChange={handleChange}\n                            />\n                        </Form.Group>\n                        <Form.Group>\n                            <Form.Control\n                                as=\"input\"\n                                name=\"description\"\n                                value={formState.description}\n                                onChange={handleChange}\n                            />\n                        </Form.Group>\n                        <Button\n                            className='my-2'\n                            type='submit'\n                            onClick={handleUpdate}\n                        >\n                            Submit\n                        </Button>\n                    </Form>\n                </Card.Body>\n            </Card>\n        </Container>\n    )\n};\n\n","/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/utils/helpers/times.js",[],"/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/utils/context/ConfirmContexProvider.js",[],"/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/utils/context/ConfirmContext.js",[],"/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/utils/context/ConfirmReducer.js",[],"/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/components/Schedule/SetNotifications.js",["192","193","194","195"],"import React, { useEffect, useState } from 'react';\nimport { useQuery, useMutation } from '@apollo/client';\nimport { EVENTS_BY_DATE } from '../../utils/queries';\nimport { SEND_EMAIL } from '../../utils/mutations';\nimport { Container } from 'react-bootstrap';\n// import { DateUtils } from 'react-day-picker';\n// import DayPickerInput from \"react-day-picker/DayPickerInput\";\nimport \"react-day-picker/lib/style.css\";\n// import dateFnsFormat from 'date-fns/format';\n// import dateFnsParse from 'date-fns/parse';\n// import ViewSchedule from './ViewSchedule';\nconst { format } = require('date-fns');\n\n\nexport default function SetNotifications() {\n    // Poll eventsByDay once per day to get matching events\n    const now = Date.now()\n    const today = format(now, 'P');\n    const { data } = useQuery(EVENTS_BY_DATE, {\n        variables: { dayRef: today },\n        pollInterval: 86400000,\n    });\n    const lesson = data?.eventsByDate\n    // for all returned users, send a reminder email.\n    // const [sendEmail] = useMutation(SEND_EMAIL);\n\n    console.log(lesson);\n\n    // Set up Boolean property on user called autoNotify\n    // now only send emails to autoNotify: true users \n    // if (user.autoNotify === true) {\n    // sendEmail mutation for each returned user\n    // }\n\n    return (\n        <Container>\n            <ul>\n                {lesson && lesson.map((lesson) => (\n                    <li>{lesson.studentName}</li>\n                ))}\n            </ul>\n        </Container>\n    )\n}\n","/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/components/Students/AddStudent.js",[],"/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/components/Schedule/Calendar.js",[],"/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/store/index.js",[],"/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/store/reducers.js",[],"/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/store/reducers/eventReducer.js",[],"/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/store/reducers/userReducer.js",[],"/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/store/actions.js",[],"/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/store/reducers/messageReducer.js",["196"],"/** MESSAGE reducer functions */\n\nimport _ from 'lodash';\n\nimport { ADD_MESSAGE } from '../actions';\n\nconst messageReducer = (state = {}, action) => {\n    switch (action.type) {\n        case ADD_MESSAGE:\n            return { ...state, [action.payload._id]: action.payload }\n        default:\n            return state;\n    }\n};\n\nexport default messageReducer;",{"ruleId":"197","replacedBy":"198"},{"ruleId":"199","replacedBy":"200"},{"ruleId":"201","severity":1,"message":"202","line":5,"column":8,"nodeType":"203","messageId":"204","endLine":5,"endColumn":17},{"ruleId":"201","severity":1,"message":"205","line":10,"column":12,"nodeType":"203","messageId":"204","endLine":10,"endColumn":17},{"ruleId":"201","severity":1,"message":"206","line":10,"column":19,"nodeType":"203","messageId":"204","endLine":10,"endColumn":27},{"ruleId":"207","severity":1,"message":"208","line":30,"column":8,"nodeType":"209","endLine":30,"endColumn":33,"suggestions":"210"},{"ruleId":"201","severity":1,"message":"211","line":2,"column":10,"nodeType":"203","messageId":"204","endLine":2,"endColumn":18},{"ruleId":"201","severity":1,"message":"212","line":4,"column":26,"nodeType":"203","messageId":"204","endLine":4,"endColumn":38},{"ruleId":"201","severity":1,"message":"213","line":50,"column":12,"nodeType":"203","messageId":"204","endLine":50,"endColumn":23},{"ruleId":"214","severity":1,"message":"215","line":88,"column":49,"nodeType":"203","messageId":"216","endLine":88,"endColumn":58},{"ruleId":"201","severity":1,"message":"217","line":1,"column":27,"nodeType":"203","messageId":"204","endLine":1,"endColumn":36},{"ruleId":"201","severity":1,"message":"217","line":1,"column":17,"nodeType":"203","messageId":"204","endLine":1,"endColumn":26},{"ruleId":"201","severity":1,"message":"218","line":1,"column":28,"nodeType":"203","messageId":"204","endLine":1,"endColumn":36},{"ruleId":"201","severity":1,"message":"219","line":2,"column":20,"nodeType":"203","messageId":"204","endLine":2,"endColumn":31},{"ruleId":"201","severity":1,"message":"220","line":4,"column":10,"nodeType":"203","messageId":"204","endLine":4,"endColumn":20},{"ruleId":"201","severity":1,"message":"221","line":3,"column":8,"nodeType":"203","messageId":"204","endLine":3,"endColumn":9},"no-native-reassign",["222"],"no-negated-in-lhs",["223"],"no-unused-vars","'PortalNav' is defined but never used.","Identifier","unusedVar","'value' is assigned a value but never used.","'onChange' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'user.length'. Either include it or remove the dependency array.","ArrayExpression",["224"],"'useQuery' is defined but never used.","'GET_STUDENTS' is defined but never used.","'selectedDay' is assigned a value but never used.","no-use-before-define","'studentId' was used before it was defined.","usedBeforeDefined","'useEffect' is defined but never used.","'useState' is defined but never used.","'useMutation' is defined but never used.","'SEND_EMAIL' is defined but never used.","'_' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"225","fix":"226"},"Update the dependencies array to be: [loading, data, dispatch, user.length]",{"range":"227","text":"228"},[876,901],"[loading, data, dispatch, user.length]"]