[{"/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/index.js":"1","/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/App.js":"2","/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/reportWebVitals.js":"3","/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/components/Navbar.js":"4","/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/pages/homepage.js":"5","/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/components/PortalNav.js":"6","/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/utils/auth.js":"7","/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/pages/login.js":"8","/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/utils/mutations.js":"9","/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/pages/signup.js":"10","/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/pages/portal.js":"11","/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/pages/students.js":"12","/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/pages/schedule.js":"13","/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/pages/calendar.js":"14","/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/utils/queries.js":"15","/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/components/Students/StudentTable.js":"16","/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/components/Students/StudentList.js":"17","/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/components/Students/DeleteUserBtn.js":"18","/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/components/Students/UpdateUserBtn.js":"19","/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/pages/messages.js":"20"},{"size":667,"mtime":1629451237626,"results":"21","hashOfConfig":"22"},{"size":2069,"mtime":1630617481091,"results":"23","hashOfConfig":"22"},{"size":362,"mtime":1629442249052,"results":"24","hashOfConfig":"22"},{"size":1442,"mtime":1630515758092,"results":"25","hashOfConfig":"22"},{"size":720,"mtime":1629605644828,"results":"26","hashOfConfig":"22"},{"size":749,"mtime":1630617809728,"results":"27","hashOfConfig":"22"},{"size":1042,"mtime":1629442730446,"results":"28","hashOfConfig":"22"},{"size":2574,"mtime":1630617689569,"results":"29","hashOfConfig":"22"},{"size":1045,"mtime":1630613904923,"results":"30","hashOfConfig":"22"},{"size":3114,"mtime":1629603533514,"results":"31","hashOfConfig":"22"},{"size":797,"mtime":1630617714258,"results":"32","hashOfConfig":"22"},{"size":4027,"mtime":1630616929125,"results":"33","hashOfConfig":"22"},{"size":4472,"mtime":1629699616369,"results":"34","hashOfConfig":"22"},{"size":676,"mtime":1630617344668,"results":"35","hashOfConfig":"22"},{"size":250,"mtime":1629957156671,"results":"36","hashOfConfig":"22"},{"size":1041,"mtime":1630614276878,"results":"37","hashOfConfig":"22"},{"size":1649,"mtime":1630616989811,"results":"38","hashOfConfig":"22"},{"size":915,"mtime":1630616834111,"results":"39","hashOfConfig":"22"},{"size":1115,"mtime":1630617013313,"results":"40","hashOfConfig":"22"},{"size":4465,"mtime":1630617864633,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"10tubh7",{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"44"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"44"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"44"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"44"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/index.js",[],["88","89"],"/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/App.js",[],"/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/reportWebVitals.js",[],"/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/components/Navbar.js",[],"/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/pages/homepage.js",[],"/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/components/PortalNav.js",[],"/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/utils/auth.js",[],"/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/pages/login.js",[],"/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/utils/mutations.js",[],"/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/pages/signup.js",[],"/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/pages/portal.js",[],"/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/pages/students.js",["90"],"import React, { useState } from 'react';\nimport { Card, Container, Form, Button } from 'react-bootstrap';\nimport PortalNav from '../components/PortalNav';\nimport StudentTable from '../components/Students/StudentTable';\nimport { useMutation } from '@apollo/client';\nimport { ADD_USER } from '../utils/mutations';\nimport Auth from '../utils/auth';\n\nexport default function Students() {\n    // form input to add student\n    const [formState, setFormState] = useState({\n        username: '',\n        email: '',\n        password: 'password1234',\n    });\n    const [addUser] = useMutation(ADD_USER);\n\n    // update state based on form input changes\n    const handleChange = (event) => {\n        const { name, value } = event.target;\n\n        setFormState({\n            ...formState,\n            [name]: value,\n        });\n    };\n\n    // submit form\n    const handleFormSubmit = async (event) => {\n        event.preventDefault();\n        console.log(formState);\n        const {\n            username,\n            email,\n            password\n        } = formState;\n        try {\n             await addUser({\n                variables: { \n                    username: username,\n                    email: email,\n                    password: password\n                 },\n            });\n            alert(\"You Did It!\");\n        } catch (e) {\n            console.error(e);\n        }\n        setFormState({\n            username: '',\n            email: '',\n            password: 'password1234',\n        });\n\n    };\n    return (\n        <Container className='p-4 my-4'>\n            <PortalNav />\n            <StudentTable />\n            <Card>\n                <Card.Header>\n                    <h4>Add New Student</h4>\n                </Card.Header>\n                <Card.Body className=\"p-3\">\n                    <p>Please note that when creating a student, their password is randomly generated. The password, which you\n                        will need to write down and share with your student, will appear in a pop up window.</p>\n                    <p>The student will need the email address and the generated password to log in.</p>\n                    <Form onSubmit={handleFormSubmit} className=\"mb-3 px-3\">\n                        <Form.Group className=\"mb-3 px-3\" controlId=\"username\">\n                            <Form.Label>Student Username</Form.Label>\n                            <Form.Control\n                                type=\"text\"\n                                name=\"username\"\n                                value={formState.username}\n                                onChange={handleChange}\n                            />\n                        </Form.Group>\n                        <Form.Group className=\"mb-3 px-3\" controlId=\"email\">\n                            <Form.Label>Student Email</Form.Label>\n                            <Form.Control\n                                type=\"email\"\n                                name=\"email\"\n                                value={formState.email}\n                                onChange={handleChange}\n\n                            />\n                        </Form.Group>\n                        <Form.Group className=\"mb-3 px-3\" controlId=\"studentFirstName\">\n                            <Form.Label>Password</Form.Label>\n                            <Form.Control\n                                type=\"text\"\n                                name=\"password\"\n                                value={formState.password}\n                                onChange={handleChange}\n                            />\n                        </Form.Group>\n                        <Button\n                            className=\"mx-3\"\n                            variant=\"success\"\n                            type=\"submit\"\n                            style={{ cursor: 'pointer' }}\n                        >\n                            Add Student\n                        </Button>\n                    </Form>\n                </Card.Body>\n            </Card>\n        </Container>\n    )\n};","/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/pages/schedule.js",["91","92"],"import React, { useState } from \"react\";\nimport { Card, Container, Form, Button } from \"react-bootstrap\";\nimport PortalNav from \"../components/PortalNav\";\nimport { DateUtils } from 'react-day-picker';\nimport DayPickerInput from \"react-day-picker/DayPickerInput\";\nimport \"react-day-picker/lib/style.css\";\nimport dateFnsFormat from 'date-fns/format';\nimport dateFnsParse from 'date-fns/parse';\n\nfunction parseDate(str, format, locale) {\n  const parsed = dateFnsParse(str, format, new Date(), { locale });\n  if (DateUtils.isDate(parsed)) {\n    return parsed;\n  }\n  return undefined;\n}\n\nfunction formatDate(date, format, locale) {\n  return dateFnsFormat(date, format, { locale });\n}\n\nexport default function Schedule() {\n    const FORMAT = 'MM/dd/yyyy';\n    const [date, setDate] = useState(new Date());\n    const students = [\n        {\n            label: 'Timmy Hanson',\n            value: 'Timmy Hanson',\n        },\n        {\n            label: 'Rachel Johnson',\n            value: 'Rachel Johnson',\n        },\n        {\n            label: 'Jim Jackson',\n            value: 'Jim Jackson',\n        },\n    ];\n    const times = [\n        {\n            label: '10:00am',\n            value: '10',\n        },\n        {\n            label: '11:00am',\n            value: '11',\n        },\n        {\n            label: '12:00am',\n            value: '12',\n        },\n        {\n            label: '1:00pm',\n            value: '13',\n        },\n        {\n            label: '2:00pm',\n            value: '14',\n        },\n        {\n            label: '3:00pm',\n            value: '15',\n        },\n        {\n            label: '4:00pm',\n            value: '16',\n        },\n        {\n            label: '5:00pm',\n            value: '17',\n        },\n        {\n            label: '6:00pm',\n            value: '18',\n        },\n    ];\n\n    function onChange(date) {\n        setDate(date);\n    }\n\n    return (\n        <Container>\n            <PortalNav />\n            <h3 className='mb-3 text-center'>Welcome to Schedule Management!</h3>\n            <Card>\n                <Card.Header>\n                    <h3>Schedule a Lesson</h3>\n                </Card.Header>\n                <Card.Body>\n                    <Form>\n                        <Form.Group className='mb-3'>\n                            <Form.Label for=\"student-scheduleLesson\" className='mb-2'>Select A Student: </Form.Label><br />\n                            <Form.Control\n                                as=\"select\"\n                                name='selectStudent'\n                            //  value={formState.studentName}\n                            >\n                                {students.map((option) => (\n                                    <option value={option.value} key={option.value}>{option.label}</option>\n                                ))}\n                            </Form.Control>\n                        </Form.Group>\n                        <Form.Group className='mb-3'>\n                            <Form.Label for=\"date-scheduleLesson\">Select Date: </Form.Label><br />\n                            <DayPickerInput\n                            formatDate={formatDate}\n                            format={FORMAT}\n                            parseDate={parseDate}\n                            placeholder={`${dateFnsFormat(new Date(), FORMAT)}`} />\n                        </Form.Group>\n                        <Form.Group className='mb-3'>\n                            <Form.Label for=\"time-scheduleLesson\" className='mb-2'>Select A Time: </Form.Label>\n                            <Form.Control\n                                as=\"select\"\n                                name='selectTime'\n                            //  value={formState.studentName}\n                            >\n                                {times.map((option) => (\n                                    <option value={option.value} key={option.value}>{option.label}</option>\n                                ))}\n                            </Form.Control>\n                        </Form.Group>\n                        <Button\n                            as='input'\n                            className='my-2'\n                            type='submit'\n                        // value='addLesson' \n                        />\n                    </Form>\n                </Card.Body>\n            </Card>\n        </Container>\n    )\n}\n\n/*\n    {{#each students as |user|}}\n    <option>'ID, Firstname Last Name'</option>\n    /* {{/each}} */\n","/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/pages/calendar.js",[],"/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/utils/queries.js",[],"/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/components/Students/StudentTable.js",["93","94","95"],"import React from 'react';\nimport { useQuery } from '@apollo/client';\nimport { Card, Col, Container, Row, } from 'react-bootstrap';\nimport { GET_STUDENTS } from '../../utils/queries';\nimport StudentList from './StudentList';\n\nexport default function StudentTable() {\n    // populate table with list of students\n    const { loading, data } = useQuery(GET_STUDENTS);\n    const students = data?.users || [];\n    return (\n        <Container>\n            <h3 className='text-center'>Welcome to Student Management!</h3>\n            <h4 className='my-4 text-center'>View Current Students</h4>\n            <div className='p-4 my-4 d-flex justify-content-center'>\n                {loading ? (\n                    <div>Loading...</div>\n                ) : (\n                    <div>\n                        {students && students.map((student) => (\n                            <StudentList students={student} key={student._id} />\n                        ))}\n                    </div>\n                )}\n            </div>\n        </Container>\n    )\n}","/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/components/Students/StudentList.js",[],"/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/components/Students/DeleteUserBtn.js",["96","97"],"import React, { useState } from 'react';\nimport { useMutation } from '@apollo/client';\nimport { Button } from 'react-bootstrap';\nimport { DELETE_USER } from '../../utils/mutations';\n\nexport default function DeletUserBtn({ formState }) {\n    const [displayError, setDisplayError] = useState(null);\n    const [deleteUser, { error }] = useMutation(DELETE_USER);\n    const handleDelete = async (e) => {\n        e.preventDefault();\n        setDisplayError(null);\n        // destructure state\n        const { _id } = formState;\n        try {\n            await deleteUser({ variables: { _id: _id } });\n            window.location.reload();\n            alert(\"You Did It!\");\n        }\n        catch (err) {\n            return setDisplayError(`${err}`);\n        }\n    };\n    return (\n        <Button\n            className='btn-danger'\n            onClick={handleDelete}\n        >\n            Delete\n        </Button>\n    )\n}","/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/components/Students/UpdateUserBtn.js",["98","99"],"import React, { useState } from 'react';\nimport { useMutation } from '@apollo/client';\nimport { Button } from 'react-bootstrap';\n\nimport { UPDATE_USER } from '../../utils/mutations';\n\nexport default function UpdateUserBtn({ formState }) {\n    const [displayError, setDisplayError] = useState(null);\n    const [updateUser, { error }] = useMutation(UPDATE_USER);\n    const handleUpdate = async (e) => {\n        e.preventDefault();\n        setDisplayError(null);\n        // destructure state\n        const {\n            _id,\n            username,\n            email,\n        } = formState;\n        try {\n            await updateUser({\n                variables: {\n                    _id: _id,\n                    username: username,\n                    email: email\n                }\n            });\n            alert(\"You Did It!\");\n        }\n        catch (err) {\n            window.location.reload();\n            return setDisplayError(`${err}`);\n        }\n    };\n    return (\n        <Button\n            className='btn-info'\n            onClick={handleUpdate}\n        >\n            Update\n        </Button>\n    )\n}","/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/pages/messages.js",[],{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","severity":1,"message":"105","line":7,"column":8,"nodeType":"106","messageId":"107","endLine":7,"endColumn":12},{"ruleId":"104","severity":1,"message":"108","line":24,"column":12,"nodeType":"106","messageId":"107","endLine":24,"endColumn":16},{"ruleId":"104","severity":1,"message":"109","line":78,"column":14,"nodeType":"106","messageId":"107","endLine":78,"endColumn":22},{"ruleId":"104","severity":1,"message":"110","line":3,"column":10,"nodeType":"106","messageId":"107","endLine":3,"endColumn":14},{"ruleId":"104","severity":1,"message":"111","line":3,"column":16,"nodeType":"106","messageId":"107","endLine":3,"endColumn":19},{"ruleId":"104","severity":1,"message":"112","line":3,"column":32,"nodeType":"106","messageId":"107","endLine":3,"endColumn":35},{"ruleId":"104","severity":1,"message":"113","line":7,"column":12,"nodeType":"106","messageId":"107","endLine":7,"endColumn":24},{"ruleId":"104","severity":1,"message":"114","line":8,"column":26,"nodeType":"106","messageId":"107","endLine":8,"endColumn":31},{"ruleId":"104","severity":1,"message":"113","line":8,"column":12,"nodeType":"106","messageId":"107","endLine":8,"endColumn":24},{"ruleId":"104","severity":1,"message":"114","line":9,"column":26,"nodeType":"106","messageId":"107","endLine":9,"endColumn":31},"no-native-reassign",["115"],"no-negated-in-lhs",["116"],"no-unused-vars","'Auth' is defined but never used.","Identifier","unusedVar","'date' is assigned a value but never used.","'onChange' is defined but never used.","'Card' is defined but never used.","'Col' is defined but never used.","'Row' is defined but never used.","'displayError' is assigned a value but never used.","'error' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]