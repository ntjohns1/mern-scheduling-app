[{"/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/index.js":"1","/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/App.js":"2","/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/reportWebVitals.js":"3","/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/components/Navbar.js":"4","/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/pages/homepage.js":"5","/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/components/PortalNav.js":"6","/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/utils/auth.js":"7","/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/pages/login.js":"8","/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/utils/mutations.js":"9","/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/pages/signup.js":"10","/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/pages/portal.js":"11","/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/pages/students.js":"12","/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/pages/schedule.js":"13","/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/pages/calendar.js":"14","/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/utils/queries.js":"15","/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/components/Students/StudentTable.js":"16","/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/components/Students/StudentList.js":"17","/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/components/Students/DeleteUserBtn.js":"18","/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/components/Students/UpdateUserBtn.js":"19","/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/pages/messages.js":"20","/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/components/Messages/AddMessage.js":"21","/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/components/Messages/SelectStudent.js":"22","/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/components/Messages/MessageHistory.js":"23","/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/components/Schedule/NewLesson.js":"24","/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/components/Schedule/ViewSchedule.js":"25","/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/components/Schedule/DeleteButton.js":"26","/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/components/Schedule/EditButton.js":"27","/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/hooks/useConfirm.js":"28","/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/components/ConfirmModal.js":"29","/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/components/Schedule/SingleLesson.js":"30","/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/utils/helpers/times.js":"31","/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/utils/context/ConfirmContexProvider.js":"32","/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/utils/context/ConfirmContext.js":"33","/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/utils/context/ConfirmReducer.js":"34"},{"size":885,"mtime":1637040214179,"results":"35","hashOfConfig":"36"},{"size":2289,"mtime":1637039498448,"results":"37","hashOfConfig":"36"},{"size":362,"mtime":1637038816970,"results":"38","hashOfConfig":"36"},{"size":1442,"mtime":1637039386838,"results":"39","hashOfConfig":"36"},{"size":720,"mtime":1637038816969,"results":"40","hashOfConfig":"36"},{"size":749,"mtime":1637038816966,"results":"41","hashOfConfig":"36"},{"size":1042,"mtime":1637038816970,"results":"42","hashOfConfig":"36"},{"size":2574,"mtime":1637038816969,"results":"43","hashOfConfig":"36"},{"size":1896,"mtime":1637038816970,"results":"44","hashOfConfig":"36"},{"size":3114,"mtime":1637038816969,"results":"45","hashOfConfig":"36"},{"size":797,"mtime":1637038816969,"results":"46","hashOfConfig":"36"},{"size":3961,"mtime":1637038816969,"results":"47","hashOfConfig":"36"},{"size":846,"mtime":1637044630995,"results":"48","hashOfConfig":"36"},{"size":676,"mtime":1637038816968,"results":"49","hashOfConfig":"36"},{"size":836,"mtime":1637038816970,"results":"50","hashOfConfig":"36"},{"size":1024,"mtime":1637038816968,"results":"51","hashOfConfig":"36"},{"size":1649,"mtime":1637038816968,"results":"52","hashOfConfig":"36"},{"size":890,"mtime":1637038816968,"results":"53","hashOfConfig":"36"},{"size":1090,"mtime":1637038816968,"results":"54","hashOfConfig":"36"},{"size":448,"mtime":1637038816969,"results":"55","hashOfConfig":"36"},{"size":1519,"mtime":1637038816966,"results":"56","hashOfConfig":"36"},{"size":1193,"mtime":1637038816966,"results":"57","hashOfConfig":"36"},{"size":1544,"mtime":1637038816966,"results":"58","hashOfConfig":"36"},{"size":7046,"mtime":1637043455997,"results":"59","hashOfConfig":"36"},{"size":2446,"mtime":1637038816967,"results":"60","hashOfConfig":"36"},{"size":1054,"mtime":1637038816967,"results":"61","hashOfConfig":"36"},{"size":432,"mtime":1637039584596,"results":"62","hashOfConfig":"36"},{"size":910,"mtime":1637040282455,"results":"63","hashOfConfig":"36"},{"size":1043,"mtime":1637038816966,"results":"64","hashOfConfig":"36"},{"size":3322,"mtime":1637039736675,"results":"65","hashOfConfig":"36"},{"size":2356,"mtime":1637039973045,"results":"66","hashOfConfig":"36"},{"size":403,"mtime":1637039856597,"results":"67","hashOfConfig":"36"},{"size":106,"mtime":1637039856671,"results":"68","hashOfConfig":"36"},{"size":490,"mtime":1637039856705,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"10tubh7",{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"72"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"72"},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/index.js",[],["141","142"],"/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/App.js",[],"/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/reportWebVitals.js",[],"/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/components/Navbar.js",[],"/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/pages/homepage.js",[],"/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/components/PortalNav.js",[],"/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/utils/auth.js",[],"/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/pages/login.js",[],"/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/utils/mutations.js",[],"/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/pages/signup.js",[],"/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/pages/portal.js",[],"/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/pages/students.js",[],"/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/pages/schedule.js",[],"/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/pages/calendar.js",[],"/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/utils/queries.js",[],"/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/components/Students/StudentTable.js",[],"/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/components/Students/StudentList.js",[],"/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/components/Students/DeleteUserBtn.js",[],"/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/components/Students/UpdateUserBtn.js",[],"/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/pages/messages.js",[],"/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/components/Messages/AddMessage.js",[],"/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/components/Messages/SelectStudent.js",[],"/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/components/Messages/MessageHistory.js",[],"/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/components/Schedule/NewLesson.js",["143"],"import React, { useState, useEffect } from 'react';\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { EVENTS_BY_DATE, GET_STUDENTS } from '../../utils/queries';\nimport { ADD_EVENT_AND_EMAIL } from '../../utils/mutations';\nimport times from '../../utils/helpers/times';\nimport { Card, Container, Form, Button } from \"react-bootstrap\";\nimport { DateUtils } from 'react-day-picker';\nimport DayPickerInput from \"react-day-picker/DayPickerInput\";\nimport \"react-day-picker/lib/style.css\";\nimport dateFnsFormat from 'date-fns/format';\nimport dateFnsParse from 'date-fns/parse';\nimport ViewSchedule from './ViewSchedule';\nimport { format, parse } from 'date-fns'\nconst mongoose = require('mongoose');\n\nfunction parseDate(str, format) {\n    const parsed = dateFnsParse(str, format, new Date());\n    if (DateUtils.isDate(parsed)) {\n        return parsed;\n    }\n    return undefined;\n}\n\nfunction formatDate(date, format) {\n    return dateFnsFormat(date, format);\n}\n\nexport default function NewLesson() {\n    const { data } = useQuery(GET_STUDENTS);\n    const [addEvent] = useMutation(ADD_EVENT_AND_EMAIL, {\n        refetchQueries: [\n            EVENTS_BY_DATE, // DocumentNode object parsed with gql\n            'eventsByDate' // Query name\n        ],\n    });\n    const students = data?.users || [];\n    const [studentId, setStudentId] = useState('');\n    const [studentName, setStudentName] = useState('');\n    const [studentEmail, setStudentEmail] = useState('');\n    const [time, setTime] = useState({ value: '' });\n    const [schedule, setSchedule] = useState('');\n    const [selectedDay, setSelectedDay] = useState(undefined)\n    const [description, setDescription] = useState('');\n    const FORMAT = 'MM/dd/yyyy';\n\n    const dayChange = (day, modifiers, dayPickerInput) => {\n        format(day, 'MM.dd.yyyy');\n        setSelectedDay(day)\n        const input = dayPickerInput.getInput();\n        setSchedule(input.value);\n    }\n\n    const handleChange = async (e) => {\n        setStudentId(e.target.value)\n    };\n\n    const getNames = (e) => {\n        for (let i = 0; i < students.length; i++) {\n            if (students[i]._id === studentId) {\n                setStudentName(students[i].username);\n                setStudentEmail(students[i].email);\n            }\n        }\n    }\n\n    useEffect(() => {\n        getNames();\n    });\n\n    const handleForm = async (e) => {\n        e.preventDefault();\n        // check for for errors`\n\n        // make sure values are filled in and valid\n\n        let email = studentEmail;\n\n        let timeStamp = parse(schedule, 'MM/dd/yyyy', new Date());\n\n        let studentObjectId = mongoose.Types.ObjectId(studentId);\n\n        const eventInput = {\n            studentId: studentObjectId,\n            studentName: studentName,\n            date: timeStamp,\n            dayRef: schedule,\n            time: time,\n            description: description,\n        };\n\n        const sendEmailInput = {\n            email: 'nelsontjohns@gmail.com',\n            senderName: 'Nelson',\n            toEmail: email,\n            subject: `New lesson on ${schedule}`,\n            text: `This is an autmated reminder that you have a new lesson scheduled with Nelson Johns on ${schedule} at ${time}`\n        }\n\n        // if the input is valid, send it to server\n        try {\n            await addEvent({ variables: { AddEventInput: eventInput, SendEmailInput: sendEmailInput } });\n            alert('lesson added');\n        } catch (err) {\n            console.log(err);\n        }\n        setStudentId('');\n        setStudentName('');\n        setStudentEmail('');\n        setDescription('');\n    };\n\n    return (\n\n        <Container>\n            <Card>\n                <Card.Header>\n                    <h3>Schedule a Lesson</h3>\n                </Card.Header>\n                <Card.Body>\n                    <Form onSubmit={handleForm}>\n                        <Form.Group className='mb-3'>\n                            <Form.Label className='mb-2'>Select A Student: </Form.Label><br />\n                            <Form.Control\n                                as=\"select\"\n                                name='selectStudent'\n                                value={studentId}\n                                onChange={handleChange}\n                            >\n                                <option value=''> Select a Student </option>\n                                {students.map((option) => (\n                                    <option value={option._id} key={option._id}>{option.username}</option>\n                                ))}\n                            </Form.Control>\n                        </Form.Group>\n                        <Form.Group className='mb-3'>\n                            <Form.Label >Select Date: </Form.Label><br />\n                            <DayPickerInput\n                                onDayChange={dayChange}\n                                hideOnDayClick={false}\n                                placeholder=\"mm/dd/yyyy\"\n                                formatDate={formatDate}\n                                format={FORMAT}\n                                parseDate={parseDate}\n                            />\n\n                            {/* {selectedDay ? (\n                                <p>You clicked {selectedDay.toLocaleDateString()}</p>\n                            ) : (\n                                <p>Please select a day.</p>\n                            )} */}\n                        </Form.Group>\n                        <Form.Group className='mb-3'>\n                            <Form.Label className='mb-2'>Select A Time: </Form.Label>\n                            <Form.Control\n                                as=\"select\"\n                                name='selectTime'\n                                value={times.value}\n                                onChange={(e) => setTime(e.target.value)}\n\n                            >\n                                <option value=''> Select a Time </option>\n                                {times.map((option) => (\n                                    <option value={option.value} key={option.value}>{option.label}</option>\n                                ))}\n                            </Form.Control>\n                        </Form.Group>\n                        <Form.Group>\n                            <Form.Control\n                                as=\"textarea\"\n                                name=\"description\"\n                                value={description}\n                                onChange={(e) => setDescription(e.target.value)}\n                                style={{ height: '100px' }}\n                            />\n                        </Form.Group>\n                        <Button\n                            as='input'\n                            className='my-2'\n                            type='submit'\n                        />\n                    </Form>\n                </Card.Body>\n            </Card>\n            <ViewSchedule day={schedule} />\n        </Container>\n    )\n}\n\n","/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/components/Schedule/ViewSchedule.js",[],"/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/components/Schedule/DeleteButton.js",[],"/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/components/Schedule/EditButton.js",[],"/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/hooks/useConfirm.js",[],"/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/components/ConfirmModal.js",[],"/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/components/Schedule/SingleLesson.js",["144"],"import React, { useState, useEffect } from 'react';\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { useParams } from 'react-router-dom';\nimport { GET_EVENT } from '../../utils/queries';\nimport { UPDATE_EVENT } from '../../utils/mutations';\nimport { Card, Container, Form, Button } from \"react-bootstrap\";\n\nexport default function SingleLesson() {\n    // Use `useParams()` to retrieve value of the route parameter `/lesson/:id`\n    const [updateEvent] = useMutation(UPDATE_EVENT);\n    const { id } = useParams();\n    // eslint-disable-next-line\n    const { data } = useQuery(GET_EVENT, {\n        // Pass the `_id` URL parameter into query to retrieve this event's data\n        variables: { _id: id },\n    });\n    const eventData = data?.event || {};\n\n    const initialState = {\n        studentName: eventData?.studentName ? eventData.studentName : '',\n        date: eventData?.date ? eventData.date : '',\n        dayRef: eventData?.dayRef ? eventData.dayRef : '',\n        time: eventData?.time ? eventData.time : '',\n        description: eventData?.description ? eventData.description : '',\n    };\n\n\n    const [formState, setFormState] = useState(initialState);\n\n    const handleChange = (event) => {\n        const { name, value } = event.target;\n\n        setFormState({\n            ...formState,\n            [name]: value,\n        });\n    };\n\n    const handleUpdate = async () => {\n        try {\n            await updateEvent({\n                variables: {\n                    _id: id\n                }\n            })\n        } catch (err) {\n            console.log(err);\n        }\n\n    };\n\n    return (\n\n        <Container>\n            <Card>\n                <Card.Header>\n                    <h3>Update Lesson with {eventData.studentName} on {eventData.date}</h3>\n                </Card.Header>\n                <Card.Body>\n                    <Form onSubmit={handleUpdate}>\n                        <Form.Group>\n                            <Form.Control\n                                as=\"input\"\n                                name=\"dayRef\"\n                                value={formState.dayRef}\n                                onChange={handleChange}\n                            />\n                        </Form.Group>\n                        <Form.Group>\n                            <Form.Control\n                                as=\"input\"\n                                name=\"time\"\n                                value={formState.time}\n                                onChange={handleChange}\n                            />\n                        </Form.Group>\n                        <Form.Group>\n                            <Form.Control\n                                as=\"input\"\n                                name=\"description\"\n                                value={formState.description}\n                                onChange={handleChange}\n                            />\n                        </Form.Group>\n                        <Button\n                            className='my-2'\n                            type='submit'\n                            onClick={handleUpdate}\n                        >\n                            Submit\n                        </Button>\n                    </Form>\n                </Card.Body>\n            </Card>\n        </Container>\n    )\n};\n\n","/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/utils/helpers/times.js",[],"/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/utils/context/ConfirmContexProvider.js",[],"/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/utils/context/ConfirmContext.js",[],"/Users/nelsonjohns/Library/Mobile Documents/com~apple~CloudDocs/Coding/mern-scheduling-app/client/src/utils/context/ConfirmReducer.js",[],{"ruleId":"145","replacedBy":"146"},{"ruleId":"147","replacedBy":"148"},{"ruleId":"149","severity":1,"message":"150","line":42,"column":12,"nodeType":"151","messageId":"152","endLine":42,"endColumn":23},{"ruleId":"149","severity":1,"message":"153","line":1,"column":27,"nodeType":"151","messageId":"152","endLine":1,"endColumn":36},"no-native-reassign",["154"],"no-negated-in-lhs",["155"],"no-unused-vars","'selectedDay' is assigned a value but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation"]
